opsDir = "./src/influxdata/ops/"
repoDir = "src/influxdata/influxdb"

def getImageTag(commitSha) {
    short_hash = commitSha.substring(0,7)
	  println("Images will be tagged: " + short_hash)
	  return short_hash
}

pipeline {
    agent any

    options {
      buildDiscarder(logRotator(numToKeepStr: '5'))
      checkoutToSubdirectory(opsDir)
    }

    environment {
      IMAGE_TAG = getImageTag("${env.INFLUXDB_SHA}")
      PROJECT_ROOT =  "${repoDir}/ui"
      SWAGGER_FILE =  "${repoDir}/http/swagger.yml"
    }

    stages {
      stage('build dev') {
        steps {
          dir(repoDir) {
              git url: 'https://github.com/influxdata/influxdb.git'
          }
          dir(opsDir) {
              git url: 'https://github.com/drdelambre/webdeply.git'
          }
          script {
            def dockerfile = 'Dockerfile.client'
            def customImage = docker.build("local-dev-image:${env.IMAGE_TAG}", "-f ${opsDir}${dockerfile} ${repoDir}/ui")
            customImage.inside("-v ${repoDir}/http/swagger.yml:/http/swagger.yml -v ${repoDir}/ui/src:/repo/src -v ${repoDir}/ui/assets:/repo/assets -v ./static:/repo/static") {
                sh 'yarn generate && ./node_modules/.bin/webpack --config webpack.prod.ts'
            }
          }
        }
      }
    }
}
